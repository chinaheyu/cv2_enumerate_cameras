name: Python package

on: push

jobs:
  build_wheels:
    name: Build wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build package
        run: pipx run build --wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: output-wheels-none-any
          path: ./dist/*.whl

  build_wheels_windows_x64:
    name: Build windows x64 wheels
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build package
        run: pipx run build --wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: output-wheels-windows-x64
          path: ./dist/*.whl

  build_wheels_windows_x86:
    name: Build windows x86 wheels
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: x86
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
      - name: Build package
        run: python -m build --wheel
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: output-wheels-windows-x86
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: output-sdist
          path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build_wheels
      - build_wheels_windows_x64
      - build_wheels_windows_x86
      - build_sdist
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cv2-enumerate-cameras
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: output-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  github-release:
    name: Sign the Python distribution with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          pattern: output-*
          path: dist
          merge-multiple: true

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"
